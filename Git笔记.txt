什么是Git?
  分布式版本控制系统
Git的诞生
	
分布式和集中式
	
git的安装：
	
创建版本库
	
把文件添加到版本库
	
时光穿梭
	
修改撤销：
	

场景：1.在未提交之前，撤销修改
      git checkout -- (文件名)
    2.在文件提交到暂存区，撤销修改
       清除暂存区的文件
      git reset HEAD （文件名）
      替换工作区文件
      git checkout -- （文件名）
    3.在文件已经被commit之后，撤销修改，版本回退。 
  删除文件
         不想删除：git checkout -- (文件名)  （误删）


         真想删除：（传达指令的过程）
                  1.删除源文件
                  2.添加暂存区（源文件）
                   git add （文件名）
                  3.提交
                   git commit -m "信息" 
	

删除文件
	
不想删
		git checkout -- 文件名
	“真”想删
		删库跑路
Github
	互联版Git
	
	将本机的SSH（加密传输协议）添加到对应账号的Github库
		1.在本地创建SSH key
			ssh-keygen -t rsa -C "email"
		2.找到SSH key所在的路径
		3.复制id_rsa.pub内容至Github中
		4.测试是否连接成功
			ssh -T git@github.com
	
	远程和本地连接
		git remote add origin "链接地址"		//地址可为html或者SSH地址 

	本地仓库推送到远程
		git push -u origin master				//第一次需-u

		git@github.com:tfpudge/Tao.git

将本机的SSH添加到github
	

把本地仓库上传到远程github
	

把远程仓库克隆到本地
	
git clone 地址
    协同开发
       1 添加好友的SSH  KEY
       2添加git好友
 参加开源项目
   1 先找到你要参加的开源项目，fork到自己的github仓库
   2 把自己的fork的项目clone到本地
   3 修改项目
    4 把修改好的项目push到自己的GitHub仓库
      5把自己的修改pull给作者
协同开发


参加开源项目



分支管理
	查看分支
       $ git branch
	创建分支 
       $ git branch 分支名称
                切换分支  
       $ git checkout 分支名称
              合并分支
       $ GIT merge 分支名称  
解决冲突
	手动处理

远程下载分支并处理冲突
	

	 从远程下载分支
git fetch origin master : pro
对比两个分支的区别
git log -p 分支1的名称 分支2 的名称
先合并 在手动处理，
1git merge 分支
手动删除冲出内容
git add 文件名 
git commit -m +信息
上传到远程
git push origin master
	










